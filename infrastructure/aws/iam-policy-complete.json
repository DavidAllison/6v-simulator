{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "S3BucketManagement",
      "Effect": "Allow",
      "Action": [
        "s3:CreateBucket",
        "s3:DeleteBucket",
        "s3:ListBucket",
        "s3:GetBucketLocation",
        "s3:GetBucketWebsite",
        "s3:PutBucketWebsite",
        "s3:DeleteBucketWebsite",
        "s3:GetBucketVersioning",
        "s3:PutBucketVersioning",
        "s3:GetBucketAcl",
        "s3:PutBucketAcl",
        "s3:GetBucketPolicy",
        "s3:PutBucketPolicy",
        "s3:DeleteBucketPolicy",
        "s3:GetBucketPolicyStatus",
        "s3:PutBucketPublicAccessBlock",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketCORS",
        "s3:PutBucketCORS",
        "s3:GetBucketOwnershipControls",
        "s3:PutBucketOwnershipControls",
        "s3:GetBucketTagging",
        "s3:PutBucketTagging",
        "s3:ListBucketVersions"
      ],
      "Resource": [
        "arn:aws:s3:::6v-allison-la-production",
        "arn:aws:s3:::6v-allison-la-pr-previews"
      ]
    },
    {
      "Sid": "S3ObjectOperations",
      "Effect": "Allow",
      "Action": [
        "s3:GetObject",
        "s3:GetObjectVersion",
        "s3:GetObjectAcl",
        "s3:GetObjectVersionAcl",
        "s3:GetObjectTagging",
        "s3:GetObjectVersionTagging",
        "s3:PutObject",
        "s3:PutObjectAcl",
        "s3:PutObjectTagging",
        "s3:DeleteObject",
        "s3:DeleteObjectVersion",
        "s3:RestoreObject"
      ],
      "Resource": [
        "arn:aws:s3:::6v-allison-la-production/*",
        "arn:aws:s3:::6v-allison-la-pr-previews/*"
      ]
    },
    {
      "Sid": "S3ListAllBuckets",
      "Effect": "Allow",
      "Action": [
        "s3:ListAllMyBuckets",
        "s3:GetBucketLocation"
      ],
      "Resource": "*"
    },
    {
      "Sid": "CloudFrontDistributionFullAccess",
      "Effect": "Allow",
      "Action": [
        "cloudfront:CreateDistribution",
        "cloudfront:CreateDistributionWithTags",
        "cloudfront:GetDistribution",
        "cloudfront:GetDistributionConfig",
        "cloudfront:UpdateDistribution",
        "cloudfront:DeleteDistribution",
        "cloudfront:ListDistributions",
        "cloudfront:ListDistributionsByWebACLId",
        "cloudfront:CreateInvalidation",
        "cloudfront:GetInvalidation",
        "cloudfront:ListInvalidations",
        "cloudfront:TagResource",
        "cloudfront:UntagResource",
        "cloudfront:ListTagsForResource"
      ],
      "Resource": [
        "arn:aws:cloudfront::517311508324:distribution/E2IKQX5MGWHUY5",
        "arn:aws:cloudfront::517311508324:distribution/EPI8WZV5IATZQ"
      ]
    },
    {
      "Sid": "CloudFrontFunctionManagement",
      "Effect": "Allow",
      "Action": [
        "cloudfront:CreateFunction",
        "cloudfront:GetFunction",
        "cloudfront:GetFunctionSummary",
        "cloudfront:UpdateFunction",
        "cloudfront:PublishFunction",
        "cloudfront:DescribeFunction",
        "cloudfront:DeleteFunction",
        "cloudfront:ListFunctions",
        "cloudfront:TestFunction"
      ],
      "Resource": [
        "arn:aws:cloudfront::517311508324:function/6v-index-rewrite",
        "arn:aws:cloudfront::517311508324:function/6v-pr-preview-router"
      ]
    },
    {
      "Sid": "CloudFrontOriginAccessControl",
      "Effect": "Allow",
      "Action": [
        "cloudfront:CreateOriginAccessControl",
        "cloudfront:GetOriginAccessControl",
        "cloudfront:GetOriginAccessControlConfig",
        "cloudfront:UpdateOriginAccessControl",
        "cloudfront:DeleteOriginAccessControl",
        "cloudfront:ListOriginAccessControls"
      ],
      "Resource": "*"
    },
    {
      "Sid": "CloudFrontListAccess",
      "Effect": "Allow",
      "Action": [
        "cloudfront:ListDistributions",
        "cloudfront:ListFunctions",
        "cloudfront:ListOriginAccessControls",
        "cloudfront:ListCachePolicies",
        "cloudfront:ListOriginRequestPolicies",
        "cloudfront:ListResponseHeadersPolicies",
        "cloudfront:GetCachePolicy",
        "cloudfront:GetOriginRequestPolicy",
        "cloudfront:GetResponseHeadersPolicy"
      ],
      "Resource": "*"
    },
    {
      "Sid": "Route53HostedZoneManagement",
      "Effect": "Allow",
      "Action": [
        "route53:CreateHostedZone",
        "route53:DeleteHostedZone",
        "route53:GetHostedZone",
        "route53:GetHostedZoneCount",
        "route53:ListHostedZones",
        "route53:ListHostedZonesByName",
        "route53:UpdateHostedZoneComment",
        "route53:AssociateVPCWithHostedZone",
        "route53:DisassociateVPCFromHostedZone",
        "route53:GetDNSSEC",
        "route53:EnableHostedZoneDNSSEC",
        "route53:DisableHostedZoneDNSSEC"
      ],
      "Resource": "*"
    },
    {
      "Sid": "Route53RecordSetManagement",
      "Effect": "Allow",
      "Action": [
        "route53:ChangeResourceRecordSets",
        "route53:ListResourceRecordSets",
        "route53:GetChange",
        "route53:GetChangeStatus"
      ],
      "Resource": [
        "arn:aws:route53:::hostedzone/Z0358877108B22OGXZBUD",
        "arn:aws:route53:::change/*"
      ]
    },
    {
      "Sid": "Route53HealthCheckManagement",
      "Effect": "Allow",
      "Action": [
        "route53:CreateHealthCheck",
        "route53:DeleteHealthCheck",
        "route53:GetHealthCheck",
        "route53:GetHealthCheckCount",
        "route53:GetHealthCheckStatus",
        "route53:GetHealthCheckLastFailureReason",
        "route53:ListHealthChecks",
        "route53:UpdateHealthCheck"
      ],
      "Resource": "*"
    },
    {
      "Sid": "Route53GeneralAccess",
      "Effect": "Allow",
      "Action": [
        "route53:GetCheckerIpRanges",
        "route53:GetGeoLocation",
        "route53:ListGeoLocations",
        "route53:GetTrafficPolicy",
        "route53:ListTrafficPolicies",
        "route53:TestDNSAnswer"
      ],
      "Resource": "*"
    },
    {
      "Sid": "ACMCertificateManagement",
      "Effect": "Allow",
      "Action": [
        "acm:RequestCertificate",
        "acm:DeleteCertificate",
        "acm:DescribeCertificate",
        "acm:GetCertificate",
        "acm:ListCertificates",
        "acm:RenewCertificate",
        "acm:UpdateCertificateOptions",
        "acm:AddTagsToCertificate",
        "acm:ListTagsForCertificate",
        "acm:RemoveTagsFromCertificate",
        "acm:ImportCertificate",
        "acm:ExportCertificate",
        "acm:ResendValidationEmail",
        "acm:GetAccountConfiguration",
        "acm:PutAccountConfiguration"
      ],
      "Resource": "*"
    },
    {
      "Sid": "ACMCertificateValidation",
      "Effect": "Allow",
      "Action": [
        "acm:DescribeCertificate",
        "acm:GetCertificate",
        "acm:ListCertificates"
      ],
      "Resource": "arn:aws:acm:us-east-1:517311508324:certificate/5370020c-71a8-4ca3-9d12-4740d8074682"
    },
    {
      "Sid": "IAMServiceLinkedRoles",
      "Effect": "Allow",
      "Action": [
        "iam:CreateServiceLinkedRole",
        "iam:GetRole",
        "iam:DeleteServiceLinkedRole",
        "iam:GetServiceLinkedRoleDeletionStatus"
      ],
      "Resource": "arn:aws:iam::*:role/aws-service-role/*.amazonaws.com/*",
      "Condition": {
        "StringLike": {
          "iam:AWSServiceName": [
            "cloudfront.amazonaws.com",
            "logger.cloudfront.amazonaws.com",
            "s3.amazonaws.com"
          ]
        }
      }
    },
    {
      "Sid": "CloudWatchLogsAccess",
      "Effect": "Allow",
      "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:GetLogEvents",
        "logs:FilterLogEvents",
        "logs:DeleteLogGroup",
        "logs:DeleteLogStream"
      ],
      "Resource": [
        "arn:aws:logs:*:517311508324:log-group:/aws/cloudfront/*",
        "arn:aws:logs:*:517311508324:log-group:/aws/lambda/*"
      ]
    },
    {
      "Sid": "CloudWatchMetricsAccess",
      "Effect": "Allow",
      "Action": [
        "cloudwatch:GetMetricStatistics",
        "cloudwatch:ListMetrics",
        "cloudwatch:PutMetricData",
        "cloudwatch:GetMetricData",
        "cloudwatch:DescribeAlarms"
      ],
      "Resource": "*"
    },
    {
      "Sid": "WAFv2Access",
      "Effect": "Allow",
      "Action": [
        "wafv2:GetWebACL",
        "wafv2:GetWebACLForResource",
        "wafv2:AssociateWebACL",
        "wafv2:DisassociateWebACL",
        "wafv2:ListWebACLs",
        "wafv2:ListResourcesForWebACL"
      ],
      "Resource": "*"
    },
    {
      "Sid": "LambdaEdgeFunctions",
      "Effect": "Allow",
      "Action": [
        "lambda:CreateFunction",
        "lambda:DeleteFunction",
        "lambda:GetFunction",
        "lambda:GetFunctionConfiguration",
        "lambda:UpdateFunctionCode",
        "lambda:UpdateFunctionConfiguration",
        "lambda:PublishVersion",
        "lambda:ListVersionsByFunction",
        "lambda:EnableReplication",
        "lambda:GetPolicy",
        "lambda:PutFunctionConcurrency",
        "lambda:DeleteFunctionConcurrency"
      ],
      "Resource": "arn:aws:lambda:*:517311508324:function:*",
      "Condition": {
        "StringEquals": {
          "lambda:FunctionArn": [
            "arn:aws:lambda:us-east-1:517311508324:function:6v-*"
          ]
        }
      }
    },
    {
      "Sid": "STSAssumeRole",
      "Effect": "Allow",
      "Action": [
        "sts:AssumeRole",
        "sts:GetCallerIdentity"
      ],
      "Resource": "*"
    }
  ]
}