name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install dependencies
        working-directory: ./client
        run: npm ci

      - name: Build site with PR configuration
        working-directory: ./client
        run: npm run build
        env:
          NODE_ENV: production
          PUBLIC_BASE_URL: https://pr-${{ github.event.pull_request.number }}.preview.6v-simulator.com
          GITHUB_EVENT_NAME: pull_request
          GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}
          IS_PR_PREVIEW: 'true'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3 preview path
        working-directory: ./client
        run: |
          aws s3 sync ./dist/ s3://${{ secrets.PR_PREVIEW_BUCKET_NAME }}/pr-${{ github.event.pull_request.number }}/ \
            --delete \
            --cache-control "public, max-age=3600" \
            --metadata '{"X-Robots-Tag":"noindex,nofollow"}'

      - name: Invalidate CloudFront cache for preview
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.PR_PREVIEW_DISTRIBUTION_ID }} \
            --paths "/pr-${{ github.event.pull_request.number }}/*" \
            --query 'Invalidation.Id' \
            --output text

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = context.payload.pull_request.number;
            const preview_url = `https://pr-${pr_number}.preview.6v-simulator.com`;
            
            // Find and update existing comment or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('🔗 Preview Deployment')
            );
            
            const commentBody = `### 🔗 Preview Deployment
            
            **Preview URL:** ${preview_url}
            **Status:** ✅ Successfully deployed
            
            This preview shows your changes in an isolated environment. The preview will be automatically deleted when this PR is closed or merged.
            
            ---
            
            **Test Checklist:**
            - [ ] Visual appearance matches expectations
            - [ ] Monte Carlo simulation runs correctly
            - [ ] Flip dynamics preserve ice rule
            - [ ] Performance is acceptable
            - [ ] No console errors
            
            ---
            
            🕐 *CloudFront cache may take up to 10 minutes to fully update. If you see old content, wait a few minutes and refresh.*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: commentBody,
              });
            }