name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '20.x'
  AWS_REGION: us-east-1

jobs:
  deploy-preview:
    name: Deploy PR Preview
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        working-directory: ./client
        run: npm ci

      # Tests are temporarily skipped - TypeScript errors need fixing
      # - name: Run tests
      #   working-directory: ./client
      #   run: npm test -- --passWithNoTests

      - name: Build site with PR settings
        working-directory: ./client
        run: |
          # Build the application
          npm run build
        env:
          NODE_ENV: development
          VITE_BUILD_MODE: preview
          VITE_BASE_URL: https://pr-${{ github.event.pull_request.number }}.dev.6v.allison.la
          VITE_IS_PR_PREVIEW: 'true'
          VITE_PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Add SEO protection
        working-directory: ./client/dist
        run: |
          # Create robots.txt to block crawlers
          cat > robots.txt << 'EOF'
          User-agent: *
          Disallow: /
          
          User-agent: Googlebot
          Disallow: /
          
          User-agent: Bingbot
          Disallow: /
          EOF
          
          # Add noindex meta tag to all HTML files
          for file in $(find . -name "*.html"); do
            if ! grep -q "X-Robots-Tag" "$file"; then
              sed -i '/<head>/a <meta name="robots" content="noindex, nofollow, noarchive, nosnippet, noimageindex">' "$file"
            fi
          done

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3 preview path
        working-directory: ./client
        run: |
          PR_PATH="pr-${{ github.event.pull_request.number }}"
          
          echo "Deploying to S3 path: ${PR_PATH}"
          
          aws s3 sync ./dist/ s3://${{ secrets.AWS_S3_BUCKET_PR_PREVIEWS }}/${PR_PATH}/ \
            --delete \
            --cache-control "private, no-cache, no-store, must-revalidate" \
            --metadata "X-Robots-Tag=noindex"

      - name: Invalidate CloudFront cache for preview
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_PR }} \
            --paths "/pr-${{ github.event.pull_request.number }}/*" \
            --query 'Invalidation.Id' \
            --output text

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = context.payload.pull_request.number;
            const preview_url = `https://pr-${pr_number}.dev.6v.allison.la`;
            
            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview Deployment')
            );
            
            const commentBody = `### 🚀 Preview Deployment
            
            **Preview URL:** ${preview_url}
            **Status:** ✅ Successfully deployed
            **SEO Protection:** 🔒 Enabled (blocked from search engines)
            
            ⏱️ *Deployment typically takes 2-3 minutes. CloudFront cache may take up to 10 minutes to fully update.*
            
            **Preview Features:**
            - 🔒 Protected from search engine indexing
            - 🔄 Automatically updates with new commits
            - 🧹 Automatically cleaned up when PR is closed
            - 🎮 Full simulation functionality available
            
            **Testing Checklist:**
            - [ ] Simulation renders correctly
            - [ ] All controls are functional
            - [ ] Performance is acceptable
            - [ ] No console errors
            
            ---
            *Last updated: ${new Date().toISOString()}*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: commentBody,
              });
            }