name: PR Preview Cleanup

on:
  pull_request:
    types: [closed]

env:
  AWS_REGION: us-east-1

jobs:
  cleanup-preview:
    name: Clean up PR Preview
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Delete preview from S3
        run: |
          PR_PATH="pr-${{ github.event.pull_request.number }}"
          
          echo "Deleting preview for PR #${{ github.event.pull_request.number }}"
          
          # Check if preview exists
          if aws s3 ls s3://${{ secrets.AWS_S3_BUCKET_PR_PREVIEWS }}/${PR_PATH}/ 2>/dev/null; then
            # Delete all objects in the PR preview path
            aws s3 rm s3://${{ secrets.AWS_S3_BUCKET_PR_PREVIEWS }}/${PR_PATH}/ \
              --recursive
            
            echo "‚úÖ Preview files deleted from S3"
          else
            echo "‚ö†Ô∏è No preview files found for PR #${{ github.event.pull_request.number }}"
          fi

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_PR }} \
            --paths "/pr-${{ github.event.pull_request.number }}/*" \
            --query 'Invalidation.Id' \
            --output text
          
          echo "‚úÖ CloudFront cache invalidated"

      - name: Comment on PR about cleanup
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr_number = context.payload.pull_request.number;
            const was_merged = context.payload.pull_request.merged;
            
            const emoji = was_merged ? 'üéâ' : 'üßπ';
            const action = was_merged ? 'merged' : 'closed';
            const followup = was_merged 
              ? 'Your changes are now live in production! üöÄ\nProduction URL: https://6v.allison.la' 
              : 'Thank you for your contribution!';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
              body: `### ${emoji} Preview Deployment Cleaned Up
              
              The preview deployment for PR #${pr_number} has been removed.
              
              ${followup}
              
              ---
              *Cleaned up at: ${new Date().toISOString()}*`
            });

      - name: Report cleanup metrics
        run: |
          echo "=== Cleanup Summary ==="
          echo "PR Number: #${{ github.event.pull_request.number }}"
          echo "PR Status: ${{ github.event.pull_request.merged && 'Merged' || 'Closed' }}"
          echo "Cleanup Status: Complete"
          echo "======================="