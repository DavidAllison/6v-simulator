name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint --if-present
    
    - name: Run type checking
      run: npm run type-check --if-present
    
    - name: Run unit tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Run performance tests
      run: npm test -- --testPathPattern=performance --watchAll=false
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Archive test results
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          coverage/
          test-results/
    
    - name: Check test coverage thresholds
      run: npm test -- --coverage --watchAll=false --coverageReporters=text-summary
      
  visual-regression:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run snapshot tests
      run: npm test -- --testPathPattern=snapshot --watchAll=false --updateSnapshot=false
    
    - name: Upload snapshot diffs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: snapshot-diffs
        path: |
          **/__snapshots__/
          **/__diff_output__/
  
  integration:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build project
      run: npm run build
    
    - name: Run integration tests
      run: npm test -- --testPathPattern=integration --watchAll=false
    
    - name: Run E2E smoke tests
      run: npm test -- --testPathPattern=errorHandling --watchAll=false --maxWorkers=1
  
  physics-validation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run physics validation tests
      run: |
        npm test -- --testPathPattern="vertexShapes|initialStates|physicsFlips|heatBath|equilibrium" --watchAll=false
    
    - name: Run reproducibility tests
      run: npm test -- --testPathPattern=reproducibility --watchAll=false
    
    - name: Generate physics report
      run: |
        npm test -- --testPathPattern="physics|vertex|flip|heat|equilibrium" --watchAll=false --json --outputFile=physics-test-results.json || true
        echo "Physics test results saved to physics-test-results.json"
    
    - name: Upload physics test results
      uses: actions/upload-artifact@v3
      with:
        name: physics-test-results
        path: physics-test-results.json